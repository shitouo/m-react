{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./project/index.js","webpack:///./src/Constance.js","webpack:///./src/FiberNode.js","webpack:///./src/MReact.js","webpack:///./src/MReactDom.js","webpack:///./src/ReactRoot.js","webpack:///./src/ScheduleWork.js"],"names":["mReactDom","render","document","getElementById","Constance","constructor","effects","NoEffect","Placement","Incomplete","PerformedWork","Update","Deletion","tags","HostRoot","ClassComponent","FunctionalComponent","HostText","works","NoWork","constance","FiberNode","tag","pendingProps","type","stateNode","return","child","sibling","memorizedProps","memorizedState","updateQuene","effectTag","nextEffect","firstEffect","lastEffect","expirationTime","alternate","REACT_ELEMENT_TYPE","Symbol","for","MReact","createElement","config","children","props","propName","hasOwnProperty","$$typeof","MReactDom","elements","container","reactRoot","scheduleWork","isWorking","isCommiting","ReactRoot","containerInfo","_internalRoot","createFiberRoot","nextUnitOfWork","rootFiber","root","current","pendingChildren","pendingCommitExpirationTime","finishedWork","remainingExpirationTime","firstBatch","nextScheduleRoot","scheduleRootUpdate","element","update","partialState","callback","isReplace","isForced","capturedValue","next","quene","baseState","first","last","callbackList","hasForceUpdate","isInitialized","capturedValues","createWorkInProgress","workLoop","commitRoot","workInProgress","committedExpirationTime","primaryEffectTag","commitPlacement","appendChild","isRootReadyForCommit","ScheduleWork","performUnitOfWork","beginWork","completeUnitOfWork","returnFiber","siblingFiber","siblings","completeWork","renderExpirationTime","newProps","newText","_rootContainerInstance","createTextInstance","text","internalInstanceHandle","randomKey","Math","random","toString","slice","internalInstanceKey","textNode","createTextNode","updateHostRoot","updateHostText","prevState","state","processUpdateQuene","reconcileChildren","instance","currentQuene","dontMutatePrevState","didSkip","updateExpirationTime","_partialState","Object","assign","queue","nextChildren","reconcileChildFibers","currentFirstChild","newChild","newFiber","reconcileSingleTextNode","placeSingleChild","textContent","created","createFiberFromText","content","mode","fiber"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./project/index.js\");\n","import mReactDom from '../src/MReactDom';\r\nimport MReact from '../src/MReact'\r\n\r\nmReactDom.render(\r\n  111111,\r\n  document.getElementById('root')\r\n)","/**\r\n * 常量\r\n */\r\nclass Constance {\r\n  constructor () {\r\n    this.effects = {\r\n      NoEffect: 0,\r\n      Placement: 2,\r\n      Incomplete: 512,\r\n      PerformedWork: 1,\r\n      Update: 4,\r\n      Deletion: 8\r\n    }\r\n    this.tags = {\r\n      HostRoot: 3,\r\n      ClassComponent: 2,\r\n      FunctionalComponent: 1,\r\n      HostText: 6\r\n    }\r\n    this.works = {\r\n      NoWork: 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Constance","/**\r\n * fiber节点类\r\n */\r\nimport Constance from './Constance'\r\n\r\nconst constance = new Constance()\r\n\r\nclass FiberNode {\r\n  constructor (tag, pendingProps) {\r\n    this.tag = tag\r\n    this.type = null\r\n    this.stateNode = null\r\n\r\n    this.return = null\r\n    this.child = null\r\n    this.sibling = null\r\n\r\n    this.pendingProps = pendingProps\r\n    this.memorizedProps = null\r\n    this.memorizedState = null\r\n    this.updateQuene = null\r\n\r\n    this.effectTag = constance.effects.NoEffect\r\n    this.nextEffect = null\r\n    this.firstEffect = null\r\n    this.lastEffect = null\r\n\r\n    this.expirationTime = constance.works.NoWork\r\n\r\n    this.alternate = null\r\n  }\r\n}\r\n\r\nexport default FiberNode","/**\r\n * MReact的主文件\r\n */\r\nconst REACT_ELEMENT_TYPE = (typeof Symbol === 'function' && Symbol.for)? Symbol.for('react.element') : 0xeac7\r\n\r\nclass MReact {\r\n  createElement (type, config, ...children) {\r\n    let props = {}\r\n    if (config) {\r\n      for (let propName in config) {\r\n        if (config.hasOwnProperty(propName)) {\r\n          props[propName] = config[propName]\r\n        }\r\n      }\r\n    }\r\n    if (children) {\r\n      props.children = children\r\n    }\r\n    return {\r\n      $$typeof: REACT_ELEMENT_TYPE,\r\n      type,\r\n      props\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MReact()","/**\r\n * 自造的reactDom\r\n */\r\nimport ReactRoot from './ReactRoot'\r\n\r\nclass MReactDom {\r\n  render (elements, container) {\r\n    // 1、把reactElement，转成Fiber tree\r\n    // 2、解析\r\n    // 3、commit\r\n    \r\n    // 先生成reactRoot，然后调用ReactRoot的render\r\n    let reactRoot = new ReactRoot(container)\r\n    reactRoot.render(elements)// 在调用到这的时候，elements已经通过babel和MReact.createElement生成reactElement了。\r\n  }\r\n}\r\n\r\nexport default new MReactDom()","/**\r\n * react的root类\r\n */\r\nimport FiberNode from './FiberNode'\r\nimport Constance from './Constance'\r\nimport ScheduleWork from './ScheduleWork'\r\n\r\nconst constance = new Constance()\r\nconst scheduleWork = new ScheduleWork()\r\n\r\nlet isWorking = false\r\nlet isCommiting = false\r\n\r\nclass ReactRoot {\r\n  constructor (containerInfo) {\r\n     this._internalRoot = this.createFiberRoot(containerInfo)\r\n     this.nextUnitOfWork = null\r\n  }\r\n\r\n  createFiberRoot (containerInfo) {\r\n    // 创建带fiber的root对象\r\n    const rootFiber = new FiberNode(constance.tags.HostRoot, null)\r\n    const root = {\r\n      current: rootFiber,\r\n      containerInfo: containerInfo,\r\n      pendingChildren: null,\r\n      pendingCommitExpirationTime: constance.works.NoWork,\r\n      finishedWork: null,\r\n      remainingExpirationTime: constance.works.NoWork,\r\n      firstBatch: null,\r\n      nextScheduleRoot: null\r\n    }\r\n    rootFiber.stateNode = root\r\n    return root\r\n  }\r\n\r\n  scheduleRootUpdate (current, element, expirationTime) {\r\n    const update = {\r\n      expirationTime: expirationTime,\r\n      partialState: { element: element },\r\n      callback: null,\r\n      isReplace: false,\r\n      isForced: false,\r\n      capturedValue: null,\r\n      next: null\r\n    }\r\n    const quene = {\r\n      baseState: null,\r\n      expirationTime: expirationTime,\r\n      first: update,\r\n      last: update,\r\n      callbackList: null,\r\n      hasForceUpdate: false,\r\n      isInitialized: false,\r\n      capturedValues: null\r\n    }\r\n    current.updateQuene = quene\r\n  }\r\n\r\n  render (children) {\r\n    this.scheduleRootUpdate(this._internalRoot.current, children, 1)\r\n    this.nextUnitOfWork = this.createWorkInProgress(this._internalRoot.current, null, 1)\r\n    scheduleWork.workLoop(this.nextUnitOfWork)\r\n    this.commitRoot(this._internalRoot.current.alternate)\r\n  }\r\n\r\n  createWorkInProgress (current, pendingProps, expirationTime) {\r\n    // 创建alternate的fiber\r\n    let workInProgress = current.alternate\r\n    if (workInProgress === null) {\r\n      workInProgress = new FiberNode(current.tag, pendingProps)\r\n      workInProgress.type = current.type\r\n      workInProgress.stateNode = current.stateNode\r\n      workInProgress.alternate = current\r\n      current.alternate = workInProgress\r\n    }else {\r\n      workInProgress.pendingProps = pendingProps\r\n      workInProgress.effectTag = constance.effects.NoEffect\r\n      workInProgress.nextEffect = null\r\n      workInProgress.firstEffect = null\r\n      workInProgress.lastEffect = null\r\n    }\r\n    workInProgress.expirationTime = expirationTime\r\n    workInProgress.child = current.child\r\n    workInProgress.sibling = current.sibling\r\n    // workInProgress.return = current.return\r\n    workInProgress.memorizedProps = current.memorizedProps\r\n    workInProgress.memorizedState = current.memorizedState\r\n    workInProgress.updateQuene = current.updateQuene\r\n\r\n    return workInProgress\r\n    \r\n  }\r\n\r\n  commitRoot (finishedWork) {\r\n    isWorking = true\r\n    isCommiting = true\r\n\r\n    let root = finishedWork.stateNode\r\n    let committedExpirationTime = root.pendingCommitExpirationTime\r\n    root.pendingCommitExpirationTime = constance.works.NoWork\r\n    \r\n    let firstEffect = null\r\n    if (finishedWork.effectTag > constance.effects.PerformedWork) {\r\n      // 当前root也有修改\r\n      if (finishedWork.lastEffect) {\r\n        finishedWork.lastEffect.nextEffect = finishedWork\r\n        firstEffect = finishedWork.firstEffect\r\n      } else {\r\n        firstEffect = finishedWork\r\n      }\r\n    }else {\r\n      // 当前root没有修改\r\n      firstEffect = finishedWork.firstEffect\r\n    }\r\n\r\n    let nextEffect = firstEffect\r\n    while (nextEffect) {\r\n      let effectTag = nextEffect.effectTag\r\n      let primaryEffectTag = effectTag & (constance.effects.Placement | constance.effects.Update | constance.effects.Deletion);\r\n      switch(primaryEffectTag) {\r\n        case constance.effects.Placement: {\r\n          this.commitPlacement(nextEffect)\r\n          nextEffect.effectTag &= ~constance.effects.Placement // 去掉当前任务\r\n          break;\r\n        }\r\n      }\r\n      nextEffect = nextEffect.nextEffect;\r\n    }\r\n  }\r\n\r\n  commitPlacement(finishedWork) {\r\n    this._internalRoot.containerInfo.appendChild(finishedWork.stateNode)\r\n  }\r\n}\r\n\r\nexport default ReactRoot","/**\r\n * 调度工作\r\n */\r\nimport Constance from './Constance'\r\nimport FiberNode from './FiberNode';\r\n\r\nconst constance = new Constance()\r\nlet isRootReadyForCommit = false\r\n\r\nclass ScheduleWork {\r\n  workLoop (nextUnitOfWork) {\r\n    while (nextUnitOfWork !== null) {\r\n      nextUnitOfWork = this.performUnitOfWork(nextUnitOfWork);\r\n    }\r\n  }\r\n\r\n  performUnitOfWork (workInProgress) {\r\n    const next = this.beginWork(workInProgress.alternate, workInProgress, 1)\r\n\r\n    if (next === null) {\r\n      // 当前分支解析到叶子结点了，返回efftces给return，并寻找其他分支还未解析的节点\r\n       this.completeUnitOfWork(workInProgress)\r\n    }\r\n\r\n    return next\r\n  }\r\n\r\n  completeUnitOfWork (workInProgress) {\r\n    // 合并当前effects到return上，然后找到其他还未解析的fiber节点\r\n    while(true) {\r\n      let current = workInProgress.alternate\r\n      let returnFiber = workInProgress.return\r\n      let siblingFiber = workInProgress.siblings\r\n\r\n      if ((workInProgress.effectTag & constance.effects.Incomplete) === constance.effects.NoEffect) {\r\n        // 当前节点已经完成\r\n        // 处理当前节点，做好commit前的准备工作\r\n        let next = this.completeWork(current, workInProgress)\r\n        if (next) {\r\n\r\n        }\r\n        // 要保证return的所有子节点都complete，才会合并effects提交\r\n        if (returnFiber && (returnFiber.effectTag & constance.effects.Incomplete) === constance.effects.NoEffect) {\r\n          // 合并children的effects到return\r\n          if (returnFiber.firstEffect === null) {\r\n            returnFiber.firstEffect = workInProgress.firstEffect\r\n          }\r\n          if (workInProgress.lastEffect) {\r\n            if (returnFiber.lastEffect) {\r\n              returnFiber.lastEffect.nextEffect = workInProgress.firstEffect\r\n            }\r\n            returnFiber.lastEffect = workInProgress.lastEffect\r\n          }\r\n          \r\n        }\r\n        // 合并自身的effects到return，并且是在children的后面\r\n        const effectTag = workInProgress.effectTag\r\n        if (effectTag > constance.effects.PerformedWork) {\r\n          if (returnFiber.lastEffect) {\r\n            returnFiber.lastEffect.nextEffect = workInProgress // 这里的结构类似于链表结构\r\n          }else {\r\n            returnFiber.firstEffect = workInProgress\r\n          }\r\n          returnFiber.lastEffect = workInProgress\r\n        }\r\n\r\n        if (siblingFiber) {\r\n          return siblingFiber\r\n        }else if(returnFiber) {\r\n          workInProgress = returnFiber\r\n          continue\r\n        }else {\r\n          // reached the root\r\n          isRootReadyForCommit = true\r\n          return null\r\n        }\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n\r\n  completeWork (current, workInProgress, renderExpirationTime) {\r\n    const newProps = workInProgress.pendingProps\r\n    switch(workInProgress.tag) {\r\n      case constance.tags.HostText: \r\n        {\r\n          let newText = newProps\r\n          if (current && workInProgress.stateNode !== null) {\r\n\r\n          }else {\r\n            // TODO: 后面要采用栈的形式来获取ContainerInstance\r\n            const _rootContainerInstance = document.getElementById('root')\r\n            workInProgress.stateNode = this.createTextInstance(newText, workInProgress)\r\n          }\r\n          return null\r\n        }\r\n    }\r\n  }\r\n\r\n  createTextInstance (text, internalInstanceHandle) {\r\n    const randomKey = Math.random().toString(36).slice(2);\r\n    const internalInstanceKey = '__reactInternalInstance$' + randomKey;\r\n    const textNode = document.createTextNode(text)\r\n    textNode[internalInstanceKey] = internalInstanceHandle\r\n    return textNode\r\n  }\r\n\r\n  beginWork (current, workInProgress, renderExpirationTime) {\r\n    switch(workInProgress.tag) {\r\n      case constance.tags.HostRoot:\r\n        return this.updateHostRoot(current, workInProgress, renderExpirationTime)\r\n      case constance.tags.HostText:\r\n        return this.updateHostText(current, workInProgress)  \r\n    }\r\n  }\r\n\r\n  updateHostText (current, workInProgress) {\r\n    workInProgress.memorizedProps = workInProgress.pendingProps\r\n    return null\r\n  }\r\n\r\n  updateHostRoot (current, workInProgress, renderExpirationTime) {\r\n    let updateQuene = workInProgress.updateQuene\r\n    if (updateQuene) {\r\n      const prevState = workInProgress.memorizedState\r\n      const state = this.processUpdateQuene(current, workInProgress, updateQuene, null, null, renderExpirationTime)\r\n      workInProgress.memorizedState = state\r\n      updateQuene = workInProgress.updateQuene\r\n\r\n      let element = state.element\r\n\r\n      this.reconcileChildren(current, workInProgress, element)\r\n    }\r\n    return workInProgress.child\r\n  }\r\n\r\n  processUpdateQuene (current, workInProgress, quene, instance, props, renderExpirationTime) {\r\n    const currentQuene = quene\r\n    quene = workInProgress.updateQuene = {\r\n      baseState: currentQuene.baseState,\r\n      expirationTime: currentQuene.expirationTime,\r\n      first: currentQuene.first,\r\n      last: currentQuene.last,\r\n      isInitialized: currentQuene.isInitialized,\r\n      capturedValues: currentQuene.capturedValues,\r\n      // These fields are no longer valid because they were already committed.\r\n      // Reset them.\r\n      callbackList: null,\r\n      hasForceUpdate: false\r\n    }\r\n\r\n    quene.expirationTime = constance.works.NoWork\r\n\r\n    let state = null\r\n    if (quene.isInitialized) {\r\n      state = quene.baseState\r\n    }else {\r\n      state = quene.baseState = workInProgress.memorizedState\r\n      quene.isInitialized = true\r\n    }\r\n    let dontMutatePrevState = true\r\n    let update = quene.first\r\n    let didSkip = false\r\n\r\n    while(update) {\r\n      let updateExpirationTime = update.expirationTime\r\n      if (updateExpirationTime > renderExpirationTime) {\r\n\r\n      }\r\n\r\n      if (!didSkip) {\r\n        quene.first = quene.next\r\n        if (quene.first === null) {\r\n          quene.last = null\r\n        }\r\n      }\r\n\r\n      // process the update\r\n      let _partialState = null\r\n      if (update.isReplace) {\r\n\r\n      }else {\r\n        _partialState = update.partialState\r\n        if (_partialState) {\r\n          if (dontMutatePrevState) {\r\n            state = Object.assign({}, state, _partialState)\r\n          }\r\n        }\r\n        dontMutatePrevState = false\r\n      }\r\n      if (update.isForced) {\r\n        queue.hasForceUpdate = true\r\n      }\r\n      update = update.next\r\n    }\r\n\r\n    if (!didSkip) {\r\n      didSkip = true,\r\n      quene.baseState = state\r\n    }\r\n    return state\r\n  }\r\n\r\n  reconcileChildren (current, workInProgress, nextChildren) {\r\n    if (current === null) {\r\n\r\n    }else {\r\n      workInProgress.child = this.reconcileChildFibers(workInProgress, current.child, nextChildren, 1)\r\n    }\r\n  }\r\n\r\n  reconcileChildFibers (returnFiber, currentFirstChild, newChild, expirationTime) {\r\n    if (newChild && typeof newChild === 'object') {\r\n\r\n    }\r\n\r\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\r\n      let newFiber = this.reconcileSingleTextNode(returnFiber, currentFirstChild, newChild, expirationTime)\r\n      this.placeSingleChild(newFiber)\r\n      return newFiber\r\n    }\r\n  }\r\n\r\n  placeSingleChild (newFiber) {\r\n    newFiber.effectTag = constance.effects.Placement\r\n  }\r\n\r\n  reconcileSingleTextNode (returnFiber, currentFirstChild, textContent, expirationTime) {\r\n    if (currentFirstChild && currentFirstChild.tag === constance.tags.HostText) {\r\n\r\n    }\r\n    let created = this.createFiberFromText(textContent, null, expirationTime)\r\n    created.return = returnFiber\r\n    return created\r\n  }\r\n\r\n  createFiberFromText (content, mode, expirationTime) {\r\n    const fiber = new FiberNode(constance.tags.HostText, content)\r\n    fiber.expirationTime = expirationTime\r\n    return fiber\r\n  }\r\n\r\n}\r\n\r\nexport default ScheduleWork"],"sourceRoot":""}